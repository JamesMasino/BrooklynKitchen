/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { CoffeeShader } from "../assets/CoffeeMaterial";
import { extend, useFrame } from "@react-three/fiber";
import GlassMaterial from "../assets/GlassMaterial";
import PlasticMaterial from "../assets/PlasticMaterial";

extend({ CoffeeShader });
export function Carafe(props) {
  const { nodes } = useGLTF("/Coffe.glb");
  const coffeeRef = useRef();

  useFrame((_state, delta) => {
    coffeeRef.current.uTime += delta;
  });

  const innerGlassGeometry = nodes.Cylinder002.geometry.clone();
  return (
    <group {...props} dispose={null}>
      <group name="Glass">
        <mesh geometry={nodes.Cylinder002.geometry}>
          <GlassMaterial />
        </mesh>
        <mesh name="Coffee" geometry={innerGlassGeometry}>
          <coffeeShader ref={coffeeRef} geometry={innerGlassGeometry} />
        </mesh>
      </group>
      <group name="Plastic">
        <mesh geometry={nodes.Cylinder004.geometry}>
          <PlasticMaterial />
        </mesh>
        <mesh
          geometry={nodes.Cylinder005.geometry}
          position={[0, 0.573, 0]}
          scale={1.009}
        >
          <PlasticMaterial />
        </mesh>
        <mesh
          geometry={nodes.Sphere.geometry}
          position={[0, 0.53, 0]}
          scale={[0.286, 0.192, 0.286]}
        >
          <PlasticMaterial />
        </mesh>
        <mesh
          geometry={nodes.Cylinder.geometry}
          position={[0.496, 0.63, 0]}
          rotation={[0, 0, 0.094]}
          scale={[0.189, 0.044, 0.189]}
        >
          <PlasticMaterial />
        </mesh>
        <mesh geometry={nodes.Cylinder009.geometry}>
          <PlasticMaterial />
        </mesh>
        <mesh geometry={nodes.BezierCurve001.geometry}>
          <PlasticMaterial />
        </mesh>
      </group>
    </group>
  );
}
